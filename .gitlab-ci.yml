variables:
  GIT_SUBMODULE_STRATEGY: recursive

workflow:
  rules:
    - if: $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE != "merge_request_event"

stages:
  - build
  - doc
  - format
  - test
  - tag
  - install

doc:Doxygen:
  stage: doc
  tags:
    - docker
  image:  $CI_REGISTRY/common/ci/dockerci/doxygen:latest
  script:
    - doxygen doc/Doxyfile
    - mv doc/html public
  dependencies:
    - build:ubuntu-with-HDF5-static
  allow_failure: true
  artifacts:
    paths:
      - public
  only:
    - main

doc:PlantUml:
  stage: doc
  tags:
    - docker
  image:  $CI_REGISTRY/common/ci/dockerci/hpp2plantuml:latest
  script:
    - mkdir -p doc/plantuml
    - hpp2plantuml -i "uff/*.h" -o doc/plantuml/output.puml
    - sed '/.+\(.*\).*/d' doc/plantuml/output.puml > doc/plantuml/architecture.puml
    - sed "/.*updateElements.*/d" doc/plantuml/architecture.puml -i
    - mkdir -p public/plantuml
    - plantuml doc/plantuml/architecture.puml
    - mv doc/plantuml/architecture.* public/plantuml/
  dependencies:
    - build:ubuntu-with-HDF5-static
  allow_failure: true
  artifacts:
    paths:
      - public
  only:
    - main


format:clang-format:
  stage: format
  tags:
    - ubuntu
  script:
    - find . -type f -name "*.cpp" -or -name "*.cc" -or -name "*.hpp" -or -name "*.h" |xargs clang-format-14 --style=file --dry-run --Werror
  dependencies: []

format:cmake-format:
  stage: format
  tags:
    - ubuntu
  script:
    - find . -name "CMakeLists.txt" | xargs cmake-format -i
    - if [ -n "$(git diff-index --name-only HEAD --)" ]; then echo "Please, format your CMake files."; echo "$(git diff-index --name-only HEAD --)"; exit 1; fi
  dependencies: []

format:clang-tidy:
  stage: format
  tags:
    - ubuntu
  script:
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DHDF5_DIR="$HDF5_DIR_GCC_64_STATIC_RELEASE" -DCatch2_DIR="$Catch2_DIR_GCC_64_STATIC_RELEASE" -DBUILD_SHARED_LIBS=OFF
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
    - cd CI
    - run-clang-tidy || exit 1
  dependencies:
    - build:ubuntu-with-HDF5-static

format:iwyu:
  stage: format
  tags:
    - ubuntu
  script:
    - iwyu_tool.py -p CI -j $NUM_PARALLEL -- -Xiwyu --no_default_mappings -Xiwyu --mapping_file="$(pwd)/.iwyu-imp" -Xiwyu --no_fwd_decls > CI/iwyu_tool.log
    - fix_includes.py --nosafe_headers < CI/iwyu_tool.log
    - git diff > CI/iwyu.patch
    - cat CI/iwyu.patch
    - if [[ `git status --porcelain` ]]; then echo "Please apply iwyu patch to fix your includes"; exit 1; fi
  dependencies:
    - build:ubuntu-with-HDF5-static
  allow_failure: true
  artifacts:
    when: on_failure
    paths:
      - CI/iwyu_tool.log
      - CI/iwyu.patch
    expire_in: 1 day

tag:version:
  stage: tag
  dependencies:
    - build:ubuntu-with-HDF5-shared
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - git tag $(cat CI/version.txt)
    - git push --tags
  tags:
    - ubuntu
    - build

build:windows-with-HDF5-static:
  stage: build
  tags:
    - win10
    - build
  script:
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DHDF5_DIR="$HDF5_DIR_2022_64_STATIC_RELEASE" -DCatch2_DIR="$Catch2_DIR_2022_64_STATIC_RELEASE" -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:windows-with-HDF5-static:
  stage: test
  dependencies:
    - build:windows-with-HDF5-static
  tags:
    - win10
    - test
  script:
    - cd CI
    - ctest --output-on-failure -C Release

install:windows-with-HDF5-static:
  stage: install
  dependencies:
    - build:windows-with-HDF5-static
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - win10
    - build
  script:
    - cmake.exe --install CI --config Release

build:windows-with-HDF5-shared:
  stage: build
  tags:
    - win10
    - build
  script:
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DHDF5_DIR="$HDF5_DIR_2022_64_SHARED_RELEASE" -DCatch2_DIR="$Catch2_DIR_2022_64_SHARED_RELEASE" -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:windows-with-HDF5-shared:
  stage: test
  dependencies:
    - build:windows-with-HDF5-shared
  tags:
    - win10
    - test
  script:
    - cd CI
    - ctest --output-on-failure -C Release

install:windows-with-HDF5-shared:
  stage: install
  dependencies:
    - build:windows-with-HDF5-shared
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - win10
    - build
  script:
    - cmake.exe --install CI --config Release

build:windows-without-HDF5-static:
  stage: build
  tags:
    - win10
    - build
  script:
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DCatch2_DIR="$Catch2_DIR_2022_64_STATIC_RELEASE" -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DWITH_HDF5=OFF
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:windows-without-HDF5-static:
  stage: test
  dependencies:
    - build:windows-without-HDF5-static
  tags:
    - win10
    - test
  script:
    - cd CI
    - ctest --output-on-failure -C Release

build:windows-without-HDF5-shared:
  stage: build
  tags:
    - win10
    - build
  script:
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DCatch2_DIR="$Catch2_DIR_2022_64_SHARED_RELEASE" -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DWITH_HDF5=OFF
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:windows-without-HDF5-shared:
  stage: test
  dependencies:
    - build:windows-without-HDF5-shared
  tags:
    - win10
    - test
  script:
    - cd CI
    - ctest --output-on-failure -C Release

build:ubuntu-with-HDF5-static:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DHDF5_DIR="$HDF5_DIR_GCC_64_STATIC_RELEASE" -DCatch2_DIR="$Catch2_DIR_GCC_64_STATIC_RELEASE" -DBUILD_SHARED_LIBS=OFF
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:ubuntu-with-HDF5-static:
  stage: test
  dependencies:
    - build:ubuntu-with-HDF5-static
  tags:
    - ubuntu
    - build
  script:
    - cd CI
    - ctest --output-on-failure -C Release

install:ubuntu-with-HDF5-static:
  stage: install
  dependencies:
    - build:ubuntu-with-HDF5-static
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - ubuntu
    - build
  script:
    - cmake --install CI --config Release

build:ubuntu-with-HDF5-shared:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DHDF5_DIR="$HDF5_DIR_GCC_64_SHARED_RELEASE" -DCatch2_DIR="$Catch2_DIR_GCC_64_SHARED_RELEASE" -DBUILD_SHARED_LIBS=ON
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:ubuntu-with-HDF5-shared:
  stage: test
  dependencies:
    - build:ubuntu-with-HDF5-shared
  tags:
    - ubuntu
    - build
  script:
    - cd CI
    - ctest --output-on-failure -C Release

install:ubuntu-with-HDF5-shared:
  stage: install
  dependencies:
    - build:ubuntu-with-HDF5-shared
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - ubuntu
    - build
  script:
    - cmake --install CI --config Release

build:ubuntu-without-HDF5-static:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - cmake -S . -B CI -DCatch2_DIR="$Catch2_DIR_GCC_64_STATIC_RELEASE" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DWITH_HDF5=OFF
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:ubuntu-without-HDF5-static:
  stage: test
  dependencies:
    - build:ubuntu-without-HDF5-static
  tags:
    - ubuntu
    - build
  script:
    - cd CI
    - ctest --output-on-failure -C Release

build:ubuntu-without-HDF5-shared:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DWITH_HDF5=OFF -DCatch2_DIR="$Catch2_DIR_GCC_64_SHARED_RELEASE"
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:ubuntu-without-HDF5-shared:
  stage: test
  dependencies:
    - build:ubuntu-without-HDF5-shared
  tags:
    - ubuntu
    - build
  script:
    - cd CI
    - ctest --output-on-failure -C Release

build:android-ubuntu-without-HDF5-static:
  stage: build
  tags:
    - android
    - ubuntu
    - build
  script:
    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DCatch2_DIR="$Catch2_DIR_ARM_V8A_64_STATIC_RELEASE" -DWITH_HDF5=OFF
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

#install:android-ubuntu-without-HDF5-static:
#  stage: install
#  dependencies:
#    - build:android-ubuntu-without-HDF5-static
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release

build:android-ubuntu-without-HDF5-shared:
  stage: build
  tags:
    - android
    - ubuntu
    - build
  script:
    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DCatch2_DIR="$Catch2_DIR_ARM_V8A_64_SHARED_RELEASE" -DWITH_HDF5=OFF
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

#install:android-ubuntu-without-HDF5-shared:
#  stage: install
#  dependencies:
#    - build:android-ubuntu-without-HDF5-shared
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release

build:android-ubuntu-with-HDF5-static:
  stage: build
  tags:
    - android
    - ubuntu
    - build
  script:
    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DHDF5_DIR="$HDF5_DIR_ARM_V8A_64_STATIC_RELEASE" -DCatch2_DIR="$Catch2_DIR_ARM_V8A_64_STATIC_RELEASE"
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

install:android-ubuntu-with-HDF5-static:
  stage: install
  dependencies:
    - build:android-ubuntu-with-HDF5-static
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - android
    - ubuntu
    - build
  script:
    - cmake --install CI --config Release

build:android-ubuntu-with-HDF5-shared:
  stage: build
  tags:
    - android
    - ubuntu
    - build
  script:
    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DHDF5_DIR="$HDF5_DIR_ARM_V8A_64_SHARED_RELEASE" -DCatch2_DIR="$Catch2_DIR_ARM_V8A_64_SHARED_RELEASE"
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

install:android-ubuntu-with-HDF5-shared:
  stage: install
  dependencies:
    - build:android-ubuntu-with-HDF5-shared
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  tags:
    - android
    - ubuntu
    - build
  script:
    - cmake --install CI --config Release

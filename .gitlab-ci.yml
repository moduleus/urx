variables:
  GIT_SUBMODULE_STRATEGY: recursive
  
stages:
  - build
  - format
  - test
  - install

format:clang-format:
  stage: format
  tags:
    - ubuntu
  script:
    - find . -type f -name "*.cpp" -or -name "*.cc" -or -name "*.hpp" -or -name "*.h" |xargs clang-format-14 --style=file --dry-run --Werror
  dependencies: []

format:cmake-format:
  stage: format
  tags:
    - ubuntu
  script:
    - find . -name "CMakeLists.txt" | xargs cmake-format -i
    - if [ -n "$(git diff-index --name-only HEAD --)" ]; then echo "Please, format your CMake files."; echo "$(git diff-index --name-only HEAD --)"; exit 1; fi
  dependencies: []

format:clang-tidy:
  stage: format
  tags:
    - ubuntu
  script:
    - cd CI
    - run-clang-tidy || exit 1
  needs:
    - build:ubuntu-with-HDF5-static

build:windows-with-HDF5-static:
  stage: build
  tags:
    - win10
    - build
  script:
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DHDF5_DIR="$HDF5_DIR_2019_64_STATIC_RELEASE" -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:windows-with-HDF5-static:
  stage: test
  needs:
    - build:windows-with-HDF5-static
  tags:
    - win10
    - test
  script:
    - cd CI
    - ctest --output-on-failure -C Release
  artifacts:
    paths:
      - CI
    expire_in: 1 day

install:windows-with-HDF5-static:
  stage: install
  needs:
    - test:windows-with-HDF5-static
    - format:clang-format
    - format:cmake-format
    - format:clang-tidy
  tags:
    - win10
    - build
  script:
    - cmake.exe --install CI --config Release

build:windows-with-HDF5-shared:
  stage: build
  tags:
    - win10
    - build
  script:
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DHDF5_DIR="$HDF5_DIR_2019_64_SHARED_RELEASE" -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:windows-with-HDF5-shared:
  stage: test
  needs:
    - build:windows-with-HDF5-shared
  tags:
    - win10
    - test
  script:
    - cd CI
    - ctest --output-on-failure -C Release
  artifacts:
    paths:
      - CI
    expire_in: 1 day

install:windows-with-HDF5-shared:
  stage: install
  needs:
    - test:windows-with-HDF5-shared
    - format:clang-format
    - format:cmake-format
    - format:clang-tidy
  tags:
    - win10
    - build
  script:
    - cmake.exe --install CI --config Release

build:windows-without-HDF5-static:
  stage: build
  tags:
    - win10
    - build
  script:
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:windows-without-HDF5-static:
  stage: test
  needs:
    - build:windows-without-HDF5-static
  tags:
    - win10
    - test
  script:
    - cd CI
    - ctest --output-on-failure -C Release
  artifacts:
    paths:
      - CI
    expire_in: 1 day

build:windows-without-HDF5-shared:
  stage: build
  tags:
    - win10
    - build
  script:
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:windows-without-HDF5-shared:
  stage: test
  needs:
    - build:windows-without-HDF5-shared
  tags:
    - win10
    - test
  script:
    - cd CI
    - ctest --output-on-failure -C Release
  artifacts:
    paths:
      - CI
    expire_in: 1 day

build:ubuntu-with-HDF5-static:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DHDF5_DIR="$HDF5_DIR_GCC_64_STATIC_RELEASE" -DBUILD_SHARED_LIBS=OFF
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:ubuntu-with-HDF5-static:
  stage: test
  needs:
    - build:ubuntu-with-HDF5-static
  tags:
    - ubuntu
    - build
  script:
    - cd CI
    - ctest --output-on-failure -C Release
  artifacts:
    paths:
      - CI
    expire_in: 1 day

install:ubuntu-with-HDF5-static:
  stage: install
  needs:
    - test:ubuntu-with-HDF5-static
    - format:clang-format
    - format:cmake-format
    - format:clang-tidy
  tags:
    - ubuntu
    - build
  script:
    - cmake --install CI --config Release

build:ubuntu-with-HDF5-shared:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DHDF5_DIR="$HDF5_DIR_GCC_64_SHARED_RELEASE" -DBUILD_SHARED_LIBS=ON
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:ubuntu-with-HDF5-shared:
  stage: test
  needs:
    - build:ubuntu-with-HDF5-shared
  tags:
    - ubuntu
    - build
  script:
    - cd CI
    - ctest --output-on-failure -C Release
  artifacts:
    paths:
      - CI
    expire_in: 1 day

install:ubuntu-with-HDF5-shared:
  stage: install
  needs:
    - test:ubuntu-with-HDF5-shared
    - format:clang-format
    - format:cmake-format
    - format:clang-tidy
  tags:
    - ubuntu
    - build
  script:
    - cmake --install CI --config Release

build:ubuntu-without-HDF5-static:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:ubuntu-without-HDF5-static:
  stage: test
  needs:
    - build:ubuntu-without-HDF5-static
  tags:
    - ubuntu
    - build
  script:
    - cd CI
    - ctest --output-on-failure -C Release
  artifacts:
    paths:
      - CI
    expire_in: 1 day

build:ubuntu-without-HDF5-shared:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

test:ubuntu-without-HDF5-shared:
  stage: test
  needs:
    - build:ubuntu-without-HDF5-shared
  tags:
    - ubuntu
    - build
  script:
    - cd CI
    - ctest --output-on-failure -C Release
  artifacts:
    paths:
      - CI
    expire_in: 1 day

build:android-ubuntu-without-HDF5-static:
  stage: build
  tags:
    - android
    - ubuntu
    - build
  script:
    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

#install:android-ubuntu-without-HDF5-static:
#  stage: install
#  needs:
#    - build:android-ubuntu-without-HDF5-static
#    - format:clang-format
#    - format:cmake-format
#    - format:clang-tidy
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release

build:android-ubuntu-without-HDF5-shared:
  stage: build
  tags:
    - android
    - ubuntu
    - build
  script:
    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

#install:android-ubuntu-without-HDF5-shared:
#  stage: install
#  needs:
#    - build:android-ubuntu-without-HDF5-shared
#    - format:clang-format
#    - format:cmake-format
#    - format:clang-tidy
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release

build:android-ubuntu-with-HDF5-static:
  stage: build
  tags:
    - android
    - ubuntu
    - build
  script:
    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DHDF5_DIR="$HDF5_DIR_ARM_V8A_64_STATIC_RELEASE"
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

install:android-ubuntu-with-HDF5-static:
  stage: install
  needs:
    - build:android-ubuntu-with-HDF5-static
    - format:clang-format
    - format:cmake-format
    - format:clang-tidy
  tags:
    - android
    - ubuntu
    - build
  script:
    - cmake --install CI --config Release

build:android-ubuntu-with-HDF5-shared:
  stage: build
  tags:
    - android
    - ubuntu
    - build
  script:
    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DHDF5_DIR="$HDF5_DIR_ARM_V8A_64_SHARED_RELEASE"
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

install:android-ubuntu-with-HDF5-shared:
  stage: install
  needs:
    - build:android-ubuntu-with-HDF5-shared
    - format:clang-format
    - format:cmake-format
    - format:clang-tidy
  tags:
    - android
    - ubuntu
    - build
  script:
    - cmake --install CI --config Release
